if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
if(maxv!=.Machine$integer.max)
if(bigVal>maxv)
ret<-bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:5)){
r<-getRand(800,1000)
print(r)
}
r<-getRand(0,1000)
library("httr")
library("jsonlite")
nextOne<-function(){
addr<-GET("https://qrng.anu.edu.au/API/jsonI.php?length=1&type=hex16&size=8")
page<-content(addr,"text")
json<-fromJSON(page, flatten = TRUE)
json<-as.data.frame(json)
val<-json$data
val<-paste0('0x', val)
val<-as.numeric(val)
val<-sprintf("%.0f", val)
Sys.sleep(.5)
return(val)
}
getRand<-function(minv, maxv){
bigVal<-nextOne()
bigVal<-as.numeric(bigVal)
if(missing(minv))
minv=0
if(missing(maxv))
maxv=.Machine$integer.max
minv<-as.numeric(minv)
maxv<-as.numeric(maxv)
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
if(maxv!=.Machine$integer.max)
if(bigVal>maxv)
ret<-bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:5)){
r<-getRand(0,1000)
print(r)
}
library("httr")
library("jsonlite")
nextOne<-function(){
addr<-GET("https://qrng.anu.edu.au/API/jsonI.php?length=1&type=hex16&size=8")
page<-content(addr,"text")
json<-fromJSON(page, flatten = TRUE)
json<-as.data.frame(json)
val<-json$data
val<-paste0('0x', val)
val<-as.numeric(val)
val<-sprintf("%.0f", val)
Sys.sleep(.5)
return(val)
}
getRand<-function(minv, maxv){
bigVal<-nextOne()
bigVal<-as.integer(bigVal)
if(missing(minv))
minv=0
if(missing(maxv))
maxv=.Machine$integer.max
minv<-as.integer(minv)
maxv<-as.ingeter(maxv)
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
if(maxv!=.Machine$integer.max)
if(bigVal>maxv)
ret<-bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:5)){
r<-getRand(800,1000)
print(r)
}
for(i in c(0:5)){
r<-getRand(800,1000)
print(r)
}
if(missing(minv))
minv=0
if(missing(maxv))
maxv=.Machine$integer.max
minv<-as.integer(minv)
maxv<-as.integer(maxv)
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret<-bigVal %% maxv
library("httr")
library("jsonlite")
nextOne<-function(){
addr<-GET("https://qrng.anu.edu.au/API/jsonI.php?length=1&type=hex16&size=8")
page<-content(addr,"text")
json<-fromJSON(page, flatten = TRUE)
json<-as.data.frame(json)
val<-json$data
val<-paste0('0x', val)
val<-as.numeric(val)
val<-sprintf("%.0f", val)
val<as.numeric(val)
Sys.sleep(.5)
return(val)
}
getRand<-function(minv, maxv){
bigVal<-nextOne()
bigVal<-as.integer(bigVal)
if(missing(minv))
minv=0
if(missing(maxv))
maxv=.Machine$integer.max
minv<-as.integer(minv)
maxv<-as.integer(maxv)
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret<-bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:5)){
r<-getRand(800,1000)
print(r)
}
library("httr")
library("jsonlite")
nextOne<-function(){
addr<-GET("https://qrng.anu.edu.au/API/jsonI.php?length=1&type=hex16&size=8")
page<-content(addr,"text")
json<-fromJSON(page, flatten = TRUE)
json<-as.data.frame(json)
val<-json$data
val<-paste0('0x', val)
val<-as.numeric(val)
val<-sprintf("%.0f", val)
val<as.numeric(val)
Sys.sleep(.5)
return(val)
}
getRand<-function(minv, maxv){
bigVal<-nextOne()
bigVal<-as.integer(bigVal)
if(missing(minv))
minv=0
if(missing(maxv))
maxv=.Machine$integer.max
minv<-as.integer(minv)
maxv<-as.integer(maxv)
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret<-bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:5)){
r<-getRand()
print(r)
}
bigVal<-as.integer(bigVal)
bigVal<-as.numeric(bigVal)
bigVal<-nextOne()
bigVal<-as.numeric(bigVal)
if(missing(minv))
minv=0
if(missing(maxv))
maxv=.Machine$integer.max
minv<-as.integer(minv)
maxv<-as.integer(maxv)
for(i in c(0:5)){
r<-getRand()
print(r)
}
library("httr")
library("jsonlite")
nextOne<-function(){
addr<-GET("https://qrng.anu.edu.au/API/jsonI.php?length=1&type=hex16&size=8")
page<-content(addr,"text")
json<-fromJSON(page, flatten = TRUE)
json<-as.data.frame(json)
val<-json$data
val<-paste0('0x', val)
val<-as.numeric(val)
val<-sprintf("%.0f", val)
Sys.sleep(.5)
return(val)
}
getRand<-function(minv, maxv){
bigVal<-nextOne()
bigVal<-as.numeric(bigVal)
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret<-bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:5)){
r<-getRand()
print(r)
}
library("httr")
library("jsonlite")
nextOne<-function(){
addr<-GET("https://qrng.anu.edu.au/API/jsonI.php?length=1&type=hex16&size=8")
page<-content(addr,"text")
json<-fromJSON(page, flatten = TRUE)
json<-as.data.frame(json)
val<-json$data
val<-paste0('0x', val)
val<-as.numeric(val)
val<-sprintf("%.0f", val)
Sys.sleep(.5)
return(val)
}
getRand<-function(minv, maxv){
bigVal<-nextOne()
bigVal<-as.numeric(bigVal)
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret<-bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:5)){
r<-getRand(0,100)
print(r)
}
for(i in c(0:15)){
r<-getRand(0,100)
print(r)
}
library("httr")
library("jsonlite")
nextOne<-function(){
addr<-GET("https://qrng.anu.edu.au/API/jsonI.php?length=1&type=hex16&size=8")
page<-content(addr,"text")
json<-fromJSON(page, flatten = TRUE)
json<-as.data.frame(json)
val<-json$data
val<-paste0('0x', val)
val<-as.numeric(val)
val<-sprintf("%.0f", val)
Sys.sleep(.5)
return(val)
}
getRand<-function(minv, maxv){
bigVal<-nextOne()
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret<-bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:15)){
r<-getRand(0,100)
print(r)
}
library("httr")
library("jsonlite")
nextOne<-function(){
addr<-GET("https://qrng.anu.edu.au/API/jsonI.php?length=1&type=hex16&size=8")
page<-content(addr,"text")
json<-fromJSON(page, flatten = TRUE)
json<-as.data.frame(json)
val<-json$data
val<-paste0('0x', val)
val<-as.numeric(val)
#val<-sprintf("%.0f", val)
Sys.sleep(.5)
return(val)
}
getRand<-function(minv, maxv){
bigVal<-nextOne()
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret<-bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:15)){
r<-getRand(0,100)
print(r)
}
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret=as.bigz(bigVal) %% as.bigz(maxv)
minv=0
maxv=100
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret=as.bigz(bigVal) %% as.bigz(maxv)
getRand<-function(minv, maxv){
bigVal<-"2972582368913800192"
bigVal<-as.numeric(bigVal)
minv=0
maxv=100
minv<-as.numeric(minv)
maxv<-as.numeric(maxv)
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret=as.bigz(bigVal) %% as.bigz(maxv)
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:5)){
r<-getRand(0,100)
print(r)
}
getRand<-function(minv, maxv){
bigVal<-"2972582366ad"
bigVal<-as.numeric(bigVal)
minv=0
maxv=100
minv<-as.numeric(minv)
maxv<-as.numeric(maxv)
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret=bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:5)){
r<-getRand(0,100)
print(r)
}
bigVal<-"2972582366ad"
bigVal<-as.numeric(bigVal)
minv=0
maxv=100
minv<-as.numeric(minv)
maxv<-as.numeric(maxv)
bigVal<-"29725823"
bigVal<-as.numeric(bigVal)
minv=0
maxv=100
minv<-as.numeric(minv)
maxv<-as.numeric(maxv)
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret=bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
for(i in c(0:5)){
r<-getRand(0,100)
print(r)
}
getRand<-function(minv, maxv){
bigVal<-"29725823"
bigVal<-as.numeric(bigVal)
minv=0
maxv=100
minv<-as.numeric(minv)
maxv<-as.numeric(maxv)
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret=bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:5)){
r<-getRand(0,100)
print(r)
}
library("httr")
library("jsonlite")
nextOne<-function(){
addr<-GET("https://qrng.anu.edu.au/API/jsonI.php?length=1&type=hex16&size=4")
page<-content(addr,"text")
json<-fromJSON(page, flatten = TRUE)
json<-as.data.frame(json)
val<-json$data
val<-paste0('0x', val)
val<-as.numeric(val)
val<-sprintf("%.0f", val)
Sys.sleep(.5)
return(val)
}
getRand<-function(minv, maxv){
bigVal<-nextOne()
bigVal<-as.numeric(bigVal)
minv<-as.numeric(minv)
maxv<-as.numeric(maxv)
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret<-bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:5)){
r<-getRand(0,100)
print(r)
}
library("httr")
library("jsonlite")
nextOne<-function(){
addr<-GET("https://qrng.anu.edu.au/API/jsonI.php?length=1&type=hex16&size=4")
page<-content(addr,"text")
json<-fromJSON(page, flatten = TRUE)
json<-as.data.frame(json)
val<-json$data
val<-paste0('0x', val)
val<-as.numeric(val)
val<-sprintf("%.0f", val)
Sys.sleep(.5)
return(val)
}
getRand<-function(minv, maxv){
bigVal<-nextOne()
bigVal<-as.numeric(bigVal)
minv<-as.numeric(minv)
maxv<-as.numeric(maxv)
if(minv<0 || maxv>.Machine$integer.max)
print(paste('min must be bigger than or0;', 'max must be less than', .Machine$integer.max))
ret<-0
con<-(bigVal>maxv)
if(maxv!=.Machine$integer.max)
if(con)
ret<-bigVal %% maxv
if(ret<minv && minv!=0)
ret= minv + (bigVal %% (maxv-minv))
ret<-sprintf("%.0f", ret)
return(ret)
}
for(i in c(0:15)){
r<-getRand(0,100)
print(r)
}
